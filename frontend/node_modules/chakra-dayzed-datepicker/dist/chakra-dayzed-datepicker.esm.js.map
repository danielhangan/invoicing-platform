{"version":3,"file":"chakra-dayzed-datepicker.esm.js","sources":["../src/utils/calanderUtils.ts","../src/components/dateNavBtns.tsx","../src/components/dayOfMonth.tsx","../src/components/calendarPanel.tsx","../src/single.tsx","../src/range.tsx"],"sourcesContent":["export const Month_Names_Full = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n\r\nexport const Month_Names_Short = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\n\r\nexport const Weekday_Names_Short = [\r\n  'Sun',\r\n  'Mon',\r\n  'Tue',\r\n  'Wed',\r\n  'Thu',\r\n  'Fri',\r\n  'Sat',\r\n];\r\n","import { Button, ButtonProps } from '@chakra-ui/react';\r\nimport { Calendar, GetBackForwardPropsOptions } from 'dayzed';\r\nimport React, { Fragment } from 'react';\r\nimport { DatepickerProps } from '../utils/commonTypes';\r\n\r\nexport interface DatepickerBackBtnsProps extends DatepickerProps {\r\n  calendars: Calendar[];\r\n  getBackProps: (data: GetBackForwardPropsOptions) => Record<string, any>;\r\n}\r\n\r\nconst DefaultBtnStyle: ButtonProps = {\r\n  variant: 'ghost',\r\n  size: 'sm',\r\n};\r\n\r\nexport const DatepickerBackBtns: React.FC<DatepickerBackBtnsProps> = (\r\n  props\r\n) => {\r\n  const { calendars, getBackProps } = props;\r\n  const customBtnProps = props.propsConfigs?.dateNavBtnProps;\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        {...getBackProps({\r\n          calendars,\r\n          offset: 12,\r\n        })}\r\n        {...DefaultBtnStyle}\r\n        {...customBtnProps}\r\n      >\r\n        {'<<'}\r\n      </Button>\r\n      <Button\r\n        {...getBackProps({ calendars })}\r\n        {...DefaultBtnStyle}\r\n        {...customBtnProps}\r\n      >\r\n        {'<'}\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport interface DatepickerForwardBtnsProps extends DatepickerProps {\r\n  calendars: Calendar[];\r\n  getForwardProps: (data: GetBackForwardPropsOptions) => Record<string, any>;\r\n}\r\n\r\nexport const DatepickerForwardBtns: React.FC<DatepickerForwardBtnsProps> = (\r\n  props\r\n) => {\r\n  const { calendars, getForwardProps } = props;\r\n  const customBtnProps = props.propsConfigs?.dateNavBtnProps;\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        {...getForwardProps({ calendars })}\r\n        {...DefaultBtnStyle}\r\n        {...customBtnProps}\r\n      >\r\n        {'>'}\r\n      </Button>\r\n      <Button\r\n        {...getForwardProps({\r\n          calendars,\r\n          offset: 12,\r\n        })}\r\n        {...DefaultBtnStyle}\r\n        {...customBtnProps}\r\n      >\r\n        {'>>'}\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { Button } from '@chakra-ui/react';\r\nimport { DateObj, RenderProps } from 'dayzed';\r\nimport React, { useMemo } from 'react';\r\nimport { DatepickerProps, DayOfMonthBtnStyleProps } from '../utils/commonTypes';\r\n\r\ninterface DayOfMonthProps extends DatepickerProps {\r\n  renderProps: RenderProps;\r\n  isInRange?: boolean | null;\r\n  dateObj: DateObj;\r\n  onMouseEnter?: React.MouseEventHandler<HTMLButtonElement> | undefined;\r\n}\r\n\r\nconst halfGap = 0.125; //default Chakra-gap-space-1 is 0.25rem\r\n\r\nexport const DayOfMonth: React.FC<DayOfMonthProps> = ({\r\n  dateObj,\r\n  propsConfigs,\r\n  isInRange,\r\n  renderProps,\r\n  onMouseEnter,\r\n}) => {\r\n  const { date, selected, selectable, today } = dateObj;\r\n  const { getDateProps } = renderProps;\r\n  const {\r\n    defaultBtnProps,\r\n    isInRangeBtnProps,\r\n    selectedBtnProps,\r\n    todayBtnProps,\r\n  } = propsConfigs?.dayOfMonthBtnProps || {};\r\n\r\n  const styleBtnProps: DayOfMonthBtnStyleProps = useMemo(\r\n    () => ({\r\n      defaultBtnProps: {\r\n        size: 'sm',\r\n        variant: 'outline',\r\n        background: 'transparent',\r\n        borderColor: 'transparent',\r\n        _hover: {\r\n          bg: 'purple.400',\r\n        },\r\n        // this intends to fill the visual gap from Grid to improve the UX\r\n        // so the button active area is actually larger than what it's seen\r\n        _after: {\r\n          content: \"''\",\r\n          position: 'absolute',\r\n          top: `-${halfGap}rem`,\r\n          left: `-${halfGap}rem`,\r\n          bottom: `-${halfGap}rem`,\r\n          right: `-${halfGap}rem`,\r\n          borderWidth: `${halfGap}rem`,\r\n          borderColor: 'transparent',\r\n        },\r\n        ...defaultBtnProps,\r\n      },\r\n      isInRangeBtnProps: {\r\n        background: 'purple.200',\r\n        ...isInRangeBtnProps,\r\n      },\r\n      selectedBtnProps: {\r\n        background: 'purple.200',\r\n        ...selectedBtnProps,\r\n      },\r\n      todayBtnProps: {\r\n        borderColor: 'blue.400',\r\n        ...todayBtnProps,\r\n      },\r\n    }),\r\n    [defaultBtnProps, isInRangeBtnProps, selectedBtnProps, todayBtnProps]\r\n  );\r\n\r\n  return (\r\n    <Button\r\n      {...getDateProps({\r\n        dateObj,\r\n        disabled: !selectable,\r\n        onMouseEnter: onMouseEnter,\r\n      })}\r\n      disabled={!selectable}\r\n      {...styleBtnProps.defaultBtnProps}\r\n      {...(isInRange && selectable && styleBtnProps.isInRangeBtnProps)}\r\n      {...(selected && selectable && styleBtnProps.selectedBtnProps)}\r\n      {...(today && styleBtnProps.todayBtnProps)}\r\n    >\r\n      {selectable ? date.getDate() : 'X'}\r\n    </Button>\r\n  );\r\n};\r\n","import {\r\n  HStack,\r\n  VStack,\r\n  Heading,\r\n  Divider,\r\n  SimpleGrid,\r\n  Box,\r\n  Stack,\r\n} from '@chakra-ui/react';\r\nimport { RenderProps } from 'dayzed';\r\nimport React from 'react';\r\nimport { DatepickerConfigs, DatepickerProps } from '../utils/commonTypes';\r\nimport { DatepickerBackBtns, DatepickerForwardBtns } from './dateNavBtns';\r\nimport { DayOfMonth } from './dayOfMonth';\r\n\r\ninterface CalendarPanelProps extends DatepickerProps {\r\n  renderProps: RenderProps;\r\n  configs: DatepickerConfigs;\r\n  onMouseEnterHighlight?: (date: Date) => void;\r\n  isInRange?: (date: Date) => boolean | null;\r\n}\r\n\r\nexport const CalendarPanel: React.FC<CalendarPanelProps> = ({\r\n  renderProps,\r\n  configs,\r\n  propsConfigs,\r\n  onMouseEnterHighlight,\r\n  isInRange,\r\n}) => {\r\n  const { calendars, getBackProps, getForwardProps } = renderProps;\r\n\r\n  if (calendars.length <= 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      className=\"datepicker-calendar\"\r\n      direction={['column', 'column', 'row']}\r\n    >\r\n      {calendars.map((calendar) => {\r\n        return (\r\n          <VStack\r\n            key={`${calendar.month}${calendar.year}`}\r\n            height=\"100%\"\r\n            borderWidth=\"1px\"\r\n            padding=\"5px 10px\"\r\n          >\r\n            <HStack>\r\n              <DatepickerBackBtns\r\n                calendars={calendars}\r\n                getBackProps={getBackProps}\r\n                propsConfigs={propsConfigs}\r\n              />\r\n              <Heading size=\"sm\" textAlign=\"center\">\r\n                {configs.monthNames[calendar.month]} {calendar.year}\r\n              </Heading>\r\n              <DatepickerForwardBtns\r\n                calendars={calendars}\r\n                getForwardProps={getForwardProps}\r\n                propsConfigs={propsConfigs}\r\n              />\r\n            </HStack>\r\n            <Divider />\r\n            <SimpleGrid columns={7} spacing={1} textAlign=\"center\">\r\n              {configs.dayNames.map((day) => (\r\n                <Box\r\n                  fontSize=\"sm\"\r\n                  fontWeight=\"semibold\"\r\n                  key={`${calendar.month}${calendar.year}${day}`}\r\n                >\r\n                  {day}\r\n                </Box>\r\n              ))}\r\n              {calendar.weeks.map((week, weekIdx) => {\r\n                return week.map((dateObj, index) => {\r\n                  const key = `${calendar.month}${calendar.year}${weekIdx}${index}`;\r\n                  if (!dateObj) return <Box key={key} />;\r\n                  const { date } = dateObj;\r\n                  return (\r\n                    <DayOfMonth\r\n                      key={key}\r\n                      dateObj={dateObj}\r\n                      propsConfigs={propsConfigs}\r\n                      renderProps={renderProps}\r\n                      isInRange={isInRange && isInRange(date)}\r\n                      onMouseEnter={() => {\r\n                        if (onMouseEnterHighlight) onMouseEnterHighlight(date);\r\n                      }}\r\n                    />\r\n                  );\r\n                });\r\n              })}\r\n            </SimpleGrid>\r\n          </VStack>\r\n        );\r\n      })}\r\n    </Stack>\r\n  );\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport {\r\n  Input,\r\n  Popover,\r\n  PopoverBody,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n  useOutsideClick,\r\n  Portal,\r\n} from '@chakra-ui/react';\r\nimport { useDayzed } from 'dayzed';\r\nimport { format } from 'date-fns';\r\nimport { Month_Names_Short, Weekday_Names_Short } from './utils/calanderUtils';\r\nimport { CalendarPanel } from './components/calendarPanel';\r\nimport {\r\n  DatepickerConfigs,\r\n  DatepickerProps,\r\n  OnDateSelected,\r\n} from './utils/commonTypes';\r\n\r\nexport interface SingleDatepickerProps extends DatepickerProps {\r\n  date?: Date;\r\n  configs?: DatepickerConfigs;\r\n  disabled?: boolean;\r\n  onDateChange: (date: Date) => void;\r\n  id?: string;\r\n  name?: string;\r\n  usePortal?: boolean;\r\n}\r\n\r\nconst DefaultConfigs = {\r\n  dateFormat: 'yyyy-MM-dd',\r\n  monthNames: Month_Names_Short,\r\n  dayNames: Weekday_Names_Short,\r\n};\r\n\r\nexport const SingleDatepicker: React.FC<SingleDatepickerProps> = ({\r\n  configs = DefaultConfigs,\r\n  propsConfigs,\r\n  usePortal,\r\n  ...props\r\n}) => {\r\n  const { date, name, disabled, onDateChange, id } = props;\r\n\r\n  // chakra popover utils\r\n  const ref = useRef<HTMLElement>(null);\r\n  const initialFocusRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  useOutsideClick({\r\n    ref: ref,\r\n    handler: () => setPopoverOpen(false),\r\n  });\r\n\r\n  // dayzed utils\r\n  const handleOnDateSelected: OnDateSelected = ({ selectable, date }) => {\r\n    if (!selectable) return;\r\n    if (date instanceof Date && !isNaN(date.getTime())) {\r\n      onDateChange(date);\r\n      setPopoverOpen(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const dayzedData = useDayzed({\r\n    showOutsideDays: true,\r\n    onDateSelected: handleOnDateSelected,\r\n    selected: date,\r\n  });\r\n\r\n  const PopoverContentWrapper = usePortal ? Portal : React.Fragment;\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottom-start\"\r\n      variant=\"responsive\"\r\n      isOpen={popoverOpen}\r\n      onClose={() => setPopoverOpen(false)}\r\n      initialFocusRef={initialFocusRef}\r\n      isLazy\r\n    >\r\n      <PopoverTrigger>\r\n        <Input\r\n          id={id}\r\n          autoComplete=\"off\"\r\n          isDisabled={disabled}\r\n          ref={initialFocusRef}\r\n          onClick={() => setPopoverOpen(!popoverOpen)}\r\n          name={name}\r\n          value={date ? format(date, configs.dateFormat) : ''}\r\n          onChange={(e) => e.target.value}\r\n          {...propsConfigs?.inputProps}\r\n        />\r\n      </PopoverTrigger>\r\n      <PopoverContentWrapper>\r\n        <PopoverContent ref={ref} width=\"100%\">\r\n          <PopoverBody>\r\n            <CalendarPanel\r\n              renderProps={dayzedData}\r\n              configs={configs}\r\n              propsConfigs={propsConfigs}\r\n            />\r\n          </PopoverBody>\r\n        </PopoverContent>\r\n      </PopoverContentWrapper>\r\n    </Popover>\r\n  );\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport { RenderProps, useDayzed } from 'dayzed';\r\nimport ArrowKeysReact from 'arrow-keys-react';\r\nimport { Month_Names_Short, Weekday_Names_Short } from './utils/calanderUtils';\r\nimport {\r\n  Flex,\r\n  Input,\r\n  Popover,\r\n  PopoverBody,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n  useOutsideClick,\r\n  Portal,\r\n} from '@chakra-ui/react';\r\nimport { CalendarPanel } from './components/calendarPanel';\r\nimport {\r\n  DatepickerConfigs,\r\n  DatepickerProps,\r\n  OnDateSelected,\r\n  PropsConfigs,\r\n} from './utils/commonTypes';\r\nimport { format } from 'date-fns';\r\n\r\ninterface RangeCalendarPanelProps {\r\n  configs: DatepickerConfigs;\r\n  propsConfigs?: PropsConfigs;\r\n  selected?: Date | Date[];\r\n  renderProps: RenderProps;\r\n}\r\n\r\nconst RangeCalendarPanel: React.FC<RangeCalendarPanelProps> = ({\r\n  configs,\r\n  propsConfigs,\r\n  selected,\r\n  renderProps,\r\n}) => {\r\n  const [hoveredDate, setHoveredDate] = useState<Date | null>(null);\r\n  const { calendars } = renderProps;\r\n\r\n  // looking for a useRef() approach to replace it\r\n  const getKeyOffset = (num: number) => {\r\n    const e = document.activeElement;\r\n    let buttons = document.querySelectorAll('button');\r\n    buttons.forEach((el, i) => {\r\n      const newNodeKey = i + num;\r\n      if (el === e) {\r\n        if (newNodeKey <= buttons.length - 1 && newNodeKey >= 0) {\r\n          buttons[newNodeKey].focus();\r\n        } else {\r\n          buttons[0].focus();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  ArrowKeysReact.config({\r\n    left: () => {\r\n      getKeyOffset(-1);\r\n    },\r\n    right: () => {\r\n      getKeyOffset(1);\r\n    },\r\n    up: () => {\r\n      getKeyOffset(-7);\r\n    },\r\n    down: () => {\r\n      getKeyOffset(7);\r\n    },\r\n  });\r\n\r\n  // Calendar level\r\n  const onMouseLeave = () => {\r\n    setHoveredDate(null);\r\n  };\r\n\r\n  // Date level\r\n  const onMouseEnterHighlight = (date: Date) => {\r\n    if (!Array.isArray(selected) || !selected?.length) {\r\n      return;\r\n    }\r\n    setHoveredDate(date);\r\n  };\r\n\r\n  const isInRange = (date: Date) => {\r\n    if (!Array.isArray(selected) || !selected?.length) {\r\n      return false;\r\n    }\r\n    let firstSelected = selected[0];\r\n    if (selected.length === 2) {\r\n      let secondSelected = selected[1];\r\n      return firstSelected < date && secondSelected > date;\r\n    } else {\r\n      return (\r\n        hoveredDate &&\r\n        ((firstSelected < date && hoveredDate >= date) ||\r\n          (date < firstSelected && date >= hoveredDate))\r\n      );\r\n    }\r\n  };\r\n\r\n  if (!(calendars.length > 0)) return null;\r\n\r\n  return (\r\n    <Flex {...ArrowKeysReact.events} onMouseLeave={onMouseLeave}>\r\n      <CalendarPanel\r\n        renderProps={renderProps}\r\n        configs={configs}\r\n        propsConfigs={propsConfigs}\r\n        isInRange={isInRange}\r\n        onMouseEnterHighlight={onMouseEnterHighlight}\r\n      />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport interface RangeDatepickerProps extends DatepickerProps {\r\n  initDate?: Date;\r\n  selectedDates: Date[];\r\n  minDate?: Date;\r\n  maxDate?: Date;\r\n  configs?: DatepickerConfigs;\r\n  disabled?: boolean;\r\n  onDateChange: (date: Date[]) => void;\r\n  id?: string;\r\n  name?: string;\r\n  usePortal?: boolean;\r\n}\r\n\r\nconst DefaultConfigs = {\r\n  dateFormat: 'MM/dd/yyyy',\r\n  monthNames: Month_Names_Short,\r\n  dayNames: Weekday_Names_Short,\r\n};\r\n\r\nexport const RangeDatepicker: React.FC<RangeDatepickerProps> = ({\r\n  configs = DefaultConfigs,\r\n  propsConfigs = {},\r\n  initDate = new Date(),\r\n  id,\r\n  name,\r\n  usePortal,\r\n  ...props\r\n}) => {\r\n  const { selectedDates, minDate, maxDate, onDateChange, disabled } = props;\r\n\r\n  // chakra popover utils\r\n  const ref = useRef<HTMLElement>(null);\r\n  const initialFocusRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  useOutsideClick({\r\n    ref: ref,\r\n    handler: () => setPopoverOpen(false),\r\n  });\r\n\r\n  // dayzed utils\r\n  const handleOnDateSelected: OnDateSelected = ({ selectable, date }) => {\r\n    if (!selectable) {\r\n      return;\r\n    }\r\n    let newDates = [...selectedDates];\r\n    if (selectedDates.length) {\r\n      if (selectedDates.length === 1) {\r\n        let firstTime = selectedDates[0];\r\n        if (firstTime < date) {\r\n          newDates.push(date);\r\n        } else {\r\n          newDates.unshift(date);\r\n        }\r\n        onDateChange(newDates);\r\n      } else if (newDates.length === 2) {\r\n        onDateChange([date]);\r\n      }\r\n    } else {\r\n      newDates.push(date);\r\n      onDateChange(newDates);\r\n    }\r\n  };\r\n\r\n  const dayzedData = useDayzed({\r\n    onDateSelected: handleOnDateSelected,\r\n    selected: selectedDates,\r\n    monthsToDisplay: 2,\r\n    date: initDate,\r\n    minDate: minDate,\r\n    maxDate: maxDate,\r\n  });\r\n\r\n  // eventually we want to allow user to freely type their own input and parse the input\r\n  let intVal = selectedDates[0]\r\n    ? `${format(selectedDates[0], configs.dateFormat)}`\r\n    : '';\r\n  intVal += selectedDates[1]\r\n    ? ` - ${format(selectedDates[1], configs.dateFormat)}`\r\n    : '';\r\n\r\n  const PopoverContentWrapper = usePortal ? Portal : React.Fragment;\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottom-start\"\r\n      variant=\"responsive\"\r\n      isOpen={popoverOpen}\r\n      onClose={() => setPopoverOpen(false)}\r\n      initialFocusRef={initialFocusRef}\r\n      isLazy\r\n    >\r\n      <PopoverTrigger>\r\n        <Input\r\n          id={id}\r\n          autoComplete=\"off\"\r\n          isDisabled={disabled}\r\n          ref={initialFocusRef}\r\n          onClick={() => setPopoverOpen(!popoverOpen)}\r\n          name={name}\r\n          value={intVal}\r\n          onChange={(e) => e.target.value}\r\n          {...propsConfigs.inputProps}\r\n        />\r\n      </PopoverTrigger>\r\n      <PopoverContentWrapper>\r\n        <PopoverContent ref={ref} width=\"100%\">\r\n          <PopoverBody>\r\n            <RangeCalendarPanel\r\n              renderProps={dayzedData}\r\n              configs={configs}\r\n              propsConfigs={propsConfigs}\r\n              selected={selectedDates}\r\n            />\r\n          </PopoverBody>\r\n        </PopoverContent>\r\n      </PopoverContentWrapper>\r\n    </Popover>\r\n  );\r\n};\r\n"],"names":["Month_Names_Short","Weekday_Names_Short","DefaultBtnStyle","variant","size","DatepickerBackBtns","props","calendars","getBackProps","customBtnProps","propsConfigs","dateNavBtnProps","React","Fragment","Button","offset","DatepickerForwardBtns","getForwardProps","halfGap","DayOfMonth","dateObj","isInRange","renderProps","onMouseEnter","date","selected","selectable","today","getDateProps","dayOfMonthBtnProps","defaultBtnProps","isInRangeBtnProps","selectedBtnProps","todayBtnProps","styleBtnProps","useMemo","background","borderColor","_hover","bg","_after","content","position","top","left","bottom","right","borderWidth","disabled","getDate","CalendarPanel","configs","onMouseEnterHighlight","length","Stack","className","direction","map","calendar","VStack","key","month","year","height","padding","HStack","Heading","textAlign","monthNames","Divider","SimpleGrid","columns","spacing","dayNames","day","Box","fontSize","fontWeight","weeks","week","weekIdx","index","DefaultConfigs","dateFormat","SingleDatepicker","usePortal","name","onDateChange","id","ref","useRef","initialFocusRef","useState","popoverOpen","setPopoverOpen","useOutsideClick","handler","handleOnDateSelected","Date","isNaN","getTime","dayzedData","useDayzed","showOutsideDays","onDateSelected","PopoverContentWrapper","Portal","Popover","placement","isOpen","onClose","isLazy","PopoverTrigger","Input","autoComplete","isDisabled","onClick","value","format","onChange","e","target","inputProps","PopoverContent","width","PopoverBody","RangeCalendarPanel","hoveredDate","setHoveredDate","getKeyOffset","num","document","activeElement","buttons","querySelectorAll","forEach","el","i","newNodeKey","focus","ArrowKeysReact","config","up","down","onMouseLeave","Array","isArray","firstSelected","secondSelected","Flex","events","RangeDatepicker","initDate","selectedDates","minDate","maxDate","newDates","firstTime","push","unshift","monthsToDisplay","intVal"],"mappings":"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"}